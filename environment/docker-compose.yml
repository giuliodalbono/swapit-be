services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.15
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVERS: "zookeeper:22888:23888"
  
  broker:
    image: confluentinc/cp-kafka:7.2.15
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      # Exposes 9092 for external connections to the broker
      # Use broker:29092 for connections internal on the docker network
      # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "r1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_SCHEMA_REGISTRY_URL: "schema-registry:8085"
      #KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_JMX_PORT: 9991

  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.15
    container_name: schema-registry
    restart: always
    depends_on:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8085"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:29092"
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
    ports:
      - 8085:8085

  db-mysql:
    image: mysql:8.0
    container_name: db-mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'swapit'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - ./mysql-volume/swapit:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  swapit-be:
    image: io.github.giuliodalbono/swapit-be:0.1.0-SNAPSHOT
    container_name: swapit-be
    restart: always
    depends_on:
      db-mysql:
        condition: service_healthy
      broker:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      DB_URL: jdbc:mysql://db-mysql:3306/swapit?useSSL=FALSE&allowPublicKeyRetrieval=true
      DB_USERNAME: root
      DB_PASSWORD: password
      KAFKA_BROKERS: broker:29092
    volumes:
      - ../email-credentials/swapit-be-oauth2-credentials.json:/app/email-credentials/swapit-be-oauth2-credentials.json:ro
      - swapit-tokens:/app/email-credentials/tokens
    healthcheck:
      test: ["CMD-SHELL", "wget --no-check-certificate --spider -q http://localhost:8080/SwapItBe/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  swapit-tokens: